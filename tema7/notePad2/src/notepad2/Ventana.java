/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad2;

import com.sun.javafx.scene.control.skin.Utils;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import static java.awt.event.KeyEvent.VK_N;
import java.awt.event.MouseEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Rubén Lahoz Sánchez
 */
public class Ventana extends javax.swing.JFrame {

    private String nombre = null;
    private boolean modificado = false;
    private String rutaAbsoluta = null;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                actionModificado(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jMenu2.setText("Archivo");

        jMenuItem1.setText("Nuevo (Crtl + N)");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionNuevo(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Abrir (Crtl + O)");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionAbrir(evt);
            }
        });
        jMenu2.add(jMenuItem2);
        jMenu2.add(jSeparator1);

        jMenuItem3.setText("Guardar (Crlt + S)");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionGuardar(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Guardar como");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionGuardarComo(evt);
            }
        });
        jMenu2.add(jMenuItem4);
        jMenu2.add(jSeparator2);

        jMenuItem5.setText("Salir");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionSalir(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edición");

        jMenuItem6.setText("Copiar");
        jMenuItem6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionCopiar(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Pegar");
        jMenuItem7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionPegar(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Cortar");
        jMenuItem8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                actionCortar(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Acciones de la barra de acciones
    
    //Acción al pulsar Nuevo
    private void actionNuevo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionNuevo
        nuevo();
    }//GEN-LAST:event_actionNuevo
    
    //Acción al pulsar Guardar
    private void actionGuardar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionGuardar
        accionGuardar();
    }//GEN-LAST:event_actionGuardar

    //Acción al pulsar Guardar Como
    private void actionGuardarComo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionGuardarComo
        guardarComo();
    }//GEN-LAST:event_actionGuardarComo

    //Acción al pulsar salir
    private void actionSalir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionSalir
        if(this.modificado) deseaGuardar();
        System.exit(0);
    }//GEN-LAST:event_actionSalir

    //Acción al pulsar una tecla en el jTextArea (supuesto de archivo modificado
    private void actionModificado(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_actionModificado
        this.modificado = true;
    }//GEN-LAST:event_actionModificado
    
    //Acción al pulsar la X de cerrar ventana de la UI
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(this.modificado) {
            int confirmacion = deseaGuardar();
            if(confirmacion == 0){
                if(this.rutaAbsoluta == null) {
                    guardarComo();
                }else guardar();
                System.exit(0);
            }
            else if(confirmacion == 1) System.exit(0);
        }else System.exit(0);
        
    }//GEN-LAST:event_formWindowClosing
    
    //Acción al pulsar copiar
    private void actionCopiar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionCopiar
        this.jTextArea1.copy();
    }//GEN-LAST:event_actionCopiar

    //Acción al pulsar pegar
    private void actionPegar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionPegar
        this.jTextArea1.paste();
    }//GEN-LAST:event_actionPegar

    //Acción al pulsar pegar
    private void actionCortar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionCortar
        this.jTextArea1.cut();
    }//GEN-LAST:event_actionCortar

    //Acción al pulsar abrir
    private void actionAbrir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actionAbrir
        accionAbrir();
    }//GEN-LAST:event_actionAbrir

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    //Inicialización del jFrame
    private void init() {
        //para centrar la ventana al iniciar la aplicación
        setLocationRelativeTo(null);
        //cambia
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        this.setTitle("Archivo sin nombre");
        addBinding();
    }

    private void addBinding(){
        InputMap im = this.jTextArea1.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK),"nuevo");
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_S, InputEvent.CTRL_DOWN_MASK),"guardar");
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_O, InputEvent.CTRL_DOWN_MASK),"abrir");
        
        ActionMap ap = this.jTextArea1.getActionMap();
        
        //keyBind nuevo
        ap.put("nuevo", new AbstractAction(){
            
            @Override
            public void actionPerformed(ActionEvent e) {
                nuevo();
            }
        });
        
        //keyBind guardar
        ap.put("guardar", new AbstractAction(){
            
            @Override
            public void actionPerformed(ActionEvent e) {
                accionGuardar();
            }
        });
        
        //keyBind guardar
        ap.put("abrir", new AbstractAction(){
            
            @Override
            public void actionPerformed(ActionEvent e) {
                abrir();
            }
        });
        
    }
    private void nuevo(){
        if(this.modificado) {
            int confirmacion = deseaGuardar();
            if(confirmacion == 0){
                if(this.rutaAbsoluta == null) {
                    guardarComo();
                }else guardar();
                limpiarTexto();
            }else if (confirmacion == 1) limpiarTexto();
        }else limpiarTexto();
    }
    
    private void accionAbrir(){
        if(this.modificado) {
            int confirmacion = deseaGuardar();
            if(confirmacion == 0){
                if(this.rutaAbsoluta == null) {
                    guardarComo();
                }else guardar();
                limpiarTexto();
            }else if (confirmacion == 1) limpiarTexto();
        }else limpiarTexto();
        abrir();
    }
    //Abre un nuevo archivo
    private void abrir(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Abrir archivo");
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
           File fichero = fileChooser.getSelectedFile();
           this.rutaAbsoluta = fichero.getAbsolutePath();
           this.nombre = fichero.getName();
        }
        IOFile archivo = new IOFile(this.rutaAbsoluta);
        
        this.jTextArea1.setText(archivo.leeArchivo());
    }
    
    //accion guardar
    private void accionGuardar(){
        if(this.rutaAbsoluta == null) guardarComo();
        else guardar();
    }
    //Guarda el texto de jTextArea1 en disco
    private void guardar() {
                
        IOFile archivo = new IOFile(this.rutaAbsoluta);
        archivo.escribeArchivo(this.jTextArea1.getText());
        this.setTitle(this.nombre);
        this.modificado = false;
    }

    //guarda el texto en archivo pidiendo una ubicación y nombre
    private void guardarComo() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar como");
        int seleccion = fileChooser.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
           File fichero = fileChooser.getSelectedFile();
           this.rutaAbsoluta = fichero.getAbsolutePath();
           this.nombre = fichero.getName();
        }
        guardar();
    }
    //PopUp para guardar saber si desea guardar archivo
    private int deseaGuardar() {
        int confirmacion = JOptionPane.showConfirmDialog(this, "Archivo no guardado, ¿Desea guardar ahora?","Guardar", JOptionPane.YES_NO_OPTION);
        return confirmacion;
    }

    //limpar el texto del jTextArea1
    private void limpiarTexto() {
        this.jTextArea1.setText("");
        this.rutaAbsoluta = null;
        this.modificado = false;
        this.setTitle("Archivo sin nombre");
    }
    
    
}
